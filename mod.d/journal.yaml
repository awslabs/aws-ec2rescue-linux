# Copyright 2016-2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
#     http://aws.amazon.com/apache2.0/
#
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.

--- !ec2rlcore.module.Module
# Module document. Translates directly into an almost-complete Module object
name: !!str journal
path: !!str
version: !!str 1.0
title: !!str Collect journalctl output
helptext: !!str |
  Collect journalctl output for log gathering. Defaults to prior 48 hours.
  Please note that extended timeframes or very verbose logging may result in this module having performance
  impact to the system when run.
  Optional --since= shows entries on or newer than a specified date. Takes systemd.time format. Defaults to 48hr.
  Optional --until= shows entries on or older than a specified date. Takes systemd.time format.
  Optional --system=true shows messages from system services and the kernel.
  Optional --user=true shows messages from from service of the current user.
  Optional --output= outputs the logs in specific format, e.g. json. See man journalctl
placement: !!str run
package: 
  - !!str
language: !!str bash
content: !!str |
  #!/bin/bash
  error_trap()
  {
      printf "%0.s=" {1..80}
      echo -e "\nERROR:	"$BASH_COMMAND" exited with an error on line ${BASH_LINENO[0]}"
      exit 0
  }
  trap error_trap ERR

  # read-in shared function
  source functions.bash

  echo "I will gather the journalctl output from this machine"
  
  CMD="journalctl --no-pager"
  
  if [ ! -z "$since" ]; 
      then
          CMD="$CMD --since=$since"
      else
          CMD="$CMD --since=-48hr"
  fi
  
  if [ ! -z "$until" ]; then
      CMD="$CMD --until=$until"
  fi
  
   if [ ! -z "$output" ]; then
      CMD="$CMD --output=$output"
  fi
  
  if [ "$system" = true ]; then
      CMD="$CMD --system"
  fi

  if [ "$user" = true ]; then
      CMD="$CMD --user"
  fi
  
  $CMD
  
  exit 0
constraint:
  requires_ec2: !!str False
  domain: !!str os
  class: !!str collect
  distro: !!str alami2 al2023 suse ubuntu rhel
  required: !!str
  optional: !!str output system user since until
  software: !!str journalctl
  sudo: !!str False
  perfimpact: !!str False
  parallelexclusive: !!str
